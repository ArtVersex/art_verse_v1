"use client"

import { useUser } from "@/lib/firestore/user/read";
import { useProductsByIds } from "@/lib/firestore/products/read";
import { useState, useEffect } from "react";
import Link from "next/link";

export default function ArtisticCheckoutComponent({ userId, checkoutType, singleProductId }) {
  const [productIds, setProductIds] = useState([]);
  const [checkoutItems, setCheckoutItems] = useState([]);
  const [subtotal, setSubtotal] = useState(0);
  const [step, setStep] = useState('review'); 
  
  // Get user data with fixed parameter
  const { user: userData, isLoading: userLoading } = useUser(userId);
  
  // Extract product IDs from cart or use singleProductId
  useEffect(() => {
    if (checkoutType === 'buynow' && singleProductId) {
      setProductIds([singleProductId]);
    } else if (checkoutType === 'cart' && userData?.cart && Array.isArray(userData.cart)) {
      const ids = userData.cart.map(item => item.productId).filter(Boolean);
      setProductIds(ids);
    }
  }, [checkoutType, singleProductId, userData]);
  
  // Fetch products based on IDs
  const { data: products, isLoading: productsLoading } = useProductsByIds({ 
    idsList: productIds.length > 0 ? productIds : [] 
  });
  
  // Prepare checkout items once products are loaded
  useEffect(() => {
    if (!products || products.length === 0) return;
    
    let items = [];
    let total = 0;
    
    if (checkoutType === 'buynow' && singleProductId) {
      const product = products.find(p => p.id === singleProductId);
      if (product) {
        items = [{
          id: product.id,
          productId: product.id,
          quantity: 1,
          product
        }];
        total = product.price || 0;
      }
    } else if (checkoutType === 'cart' && userData?.cart && Array.isArray(userData.cart)) {
      items = userData.cart.map(cartItem => {
        const product = products.find(p => p.id === cartItem.productId);
        const itemTotal = product ? (product.price || 0) * (cartItem.quantity || 1) : 0;
        total += itemTotal;
        
        return {
          ...cartItem,
          product
        };
      }).filter(item => item.product); // Only include items with matching products
    }
    
    setCheckoutItems(items);
    setSubtotal(total);
  }, [products, checkoutType, singleProductId, userData]);
  
  const isLoading = userLoading || productsLoading;
  
  // Artistic Loading State
  if (isLoading) {
    return (
      <div className="flex justify-center py-16 pt-20">
        <div className="animate-pulse space-y-6 w-full max-w-md text-center">
          <div className="flex justify-center">
            <div className="w-16 h-16 border-4 border-indigo-300 rounded-full animate-spin border-t-indigo-600"></div>
          </div>
          <div className="h-6 bg-gradient-to-r from-indigo-100 to-purple-100 rounded w-3/4 mx-auto"></div>
          <div className="h-32 bg-gradient-to-r from-indigo-50 to-purple-50 rounded shadow-sm"></div>
          <div className="h-6 bg-gradient-to-r from-indigo-100 to-purple-100 rounded w-1/2 mx-auto"></div>
          <p className="font-serif italic text-indigo-700 mt-4">Curating your masterpieces...</p>
        </div>
      </div>
    );
  }
  
  // Artistic Empty State
  if (checkoutItems.length === 0) {
    return (
      <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 border border-indigo-100">
        <div className="text-center">
          <h2 className="text-2xl font-serif italic font-bold text-indigo-800 mb-4">Your Collection Awaits</h2>
          <div className="w-16 h-1 bg-amber-400 mx-auto mb-6"></div>
          <p className="mb-6 font-serif text-indigo-700">We couldn't find any masterpieces for your acquisition.</p>
          <Link href="/products" className="px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded hover:from-indigo-700 hover:to-purple-700 transition-all font-serif">
            Explore Gallery
          </Link>
        </div>
        <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
        <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
        <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
        <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
      </div>
    );
  }
  
  return (
    <div className="grid md:grid-cols-3 gap-8">
      {/* Left Column - Order Items */}
      <div className="md:col-span-2">
        <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 mb-8 relative">
          <div className="flex justify-center mb-6">
            <h2 className="text-2xl font-serif italic font-bold text-indigo-800 relative inline-block">
              Your Masterpieces
              <div className="w-full h-1 bg-amber-400 absolute -bottom-2 left-0"></div>
            </h2>
          </div>
          
          <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
          
          <div className="space-y-6">
            {checkoutItems.map((item, index) => (
              <div key={index} className="border-b border-indigo-100 pb-6 last:border-b-0">
                <div className="flex items-start hover:bg-indigo-50 p-2 rounded-lg transition-all">
                  <div className="bg-gradient-to-r from-indigo-50 to-purple-50 rounded-lg p-1 mr-6 transform rotate-1 shadow-md border border-indigo-100">
                    <div className="bg-white p-1 rounded">
                      {item.product?.featureImageUrl ? (
                        <img 
                          src={item.product.featureImageUrl} 
                          alt={item.product.title} 
                          className="h-24 w-24 object-contain"
                        />
                      ) : (
                        <div className="h-24 w-24 flex items-center justify-center text-indigo-300 font-serif italic">No Image</div>
                      )}
                    </div>
                  </div>
                  
                  <div className="flex-1">
                    <h3 className="font-serif italic text-lg text-indigo-800">{item.product?.title || 'Masterpiece'}</h3>
                    <p className="text-sm text-indigo-600 font-serif">
                      Provenance: {item.product?.id}
                    </p>
                    <div className="flex justify-between mt-4">
                      <div className="text-sm font-serif italic text-indigo-700">
                        Editions: {item.quantity || 1}
                      </div>
                      <div className="font-serif text-lg text-indigo-800">
                        ${((item.product?.price || 0) * (item.quantity || 1)).toFixed(2)}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
        
        {/* Delivery Information - only shown when in shipping step */}
        {step === 'shipping' && (
          <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 mb-8 relative">
            <div className="flex justify-center mb-6">
              <h2 className="text-2xl font-serif italic font-bold text-indigo-800 relative inline-block">
                Delivery Information
                <div className="w-full h-1 bg-amber-400 absolute -bottom-2 left-0"></div>
              </h2>
            </div>
            
            <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
            
            <div className="space-y-6">
              <div className="grid grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">First Name</label>
                  <input 
                    type="text" 
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">Last Name</label>
                  <input 
                    type="text" 
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-serif italic text-indigo-800 mb-2">Address</label>
                <input 
                  type="text" 
                  className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                />
              </div>
              
              <div className="grid grid-cols-3 gap-6">
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">City</label>
                  <input 
                    type="text" 
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">State</label>
                  <input 
                    type="text" 
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">ZIP Code</label>
                  <input 
                    type="text" 
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-serif italic text-indigo-800 mb-2">Phone Number</label>
                <input 
                  type="tel" 
                  className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                />
              </div>
            </div>
            
            <div className="mt-8 flex justify-between">
              <button 
                onClick={() => setStep('review')}
                className="px-6 py-3 border border-indigo-300 rounded-lg text-indigo-700 hover:bg-indigo-50 transition-all font-serif italic"
              >
                Return to Review
              </button>
              <button 
                onClick={() => setStep('payment')}
                className="px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-serif italic"
              >
                Proceed to Payment
              </button>
            </div>
          </div>
        )}
        
        {/* Payment Information - only shown when in payment step */}
        {step === 'payment' && (
          <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 mb-8 relative">
            <div className="flex justify-center mb-6">
              <h2 className="text-2xl font-serif italic font-bold text-indigo-800 relative inline-block">
                Payment Method
                <div className="w-full h-1 bg-amber-400 absolute -bottom-2 left-0"></div>
              </h2>
            </div>
            
            <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
            
            <div className="space-y-6">
              <div>
                <label className="block text-sm font-serif italic text-indigo-800 mb-2">Card Number</label>
                <input 
                  type="text" 
                  placeholder="•••• •••• •••• ••••"
                  className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                />
              </div>
              
              <div className="grid grid-cols-3 gap-6">
                <div className="col-span-2">
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">Expiration Date</label>
                  <input 
                    type="text" 
                    placeholder="MM/YY"
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-serif italic text-indigo-800 mb-2">CVC</label>
                  <input 
                    type="text" 
                    placeholder="•••"
                    className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                  />
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-serif italic text-indigo-800 mb-2">Name on Card</label>
                <input 
                  type="text" 
                  className="w-full border border-indigo-200 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 outline-none transition-all bg-white"
                />
              </div>
            </div>
            
            <div className="mt-8 flex justify-between">
              <button 
                onClick={() => setStep('shipping')}
                className="px-6 py-3 border border-indigo-300 rounded-lg text-indigo-700 hover:bg-indigo-50 transition-all font-serif italic"
              >
                Return to Delivery
              </button>
              <button 
                onClick={() => setStep('confirmation')}
                className="px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-serif italic"
              >
                Complete Acquisition
              </button>
            </div>
          </div>
        )}
        
        {/* Order Confirmation - only shown when in confirmation step */}
        {step === 'confirmation' && (
          <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 mb-8 relative">
            <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
            <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
            
            <div className="text-center py-12">
              <div className="w-20 h-20 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-full flex items-center justify-center mx-auto mb-6 border border-indigo-200">
                <svg className="w-10 h-10 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <h2 className="text-3xl font-serif italic font-bold text-indigo-800 mb-4">Acquisition Confirmed</h2>
              <div className="w-24 h-1 bg-amber-400 mx-auto mb-6"></div>
              <p className="text-indigo-700 mb-8 font-serif italic">
                Your acquisition has been finalized. A confirmation will be sent to your gallery correspondence.
              </p>
              <p className="font-serif text-indigo-800 mb-8">Acquisition Reference: <span className="font-medium">78293-A</span></p>
              
              <div className="mt-8">
                <Link href="/" className="px-8 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-serif italic">
                  Continue Exploring
                </Link>
              </div>
            </div>
          </div>
        )}
      </div>
      
      {/* Right Column - Order Summary */}
      <div className="md:col-span-1">
        <div className="bg-gradient-to-r from-white to-indigo-50 rounded-lg shadow-md p-8 sticky top-6 relative">
          <div className="flex justify-center mb-6">
            <h2 className="text-2xl font-serif italic font-bold text-indigo-800 relative inline-block">
              Acquisition Summary
              <div className="w-full h-1 bg-amber-400 absolute -bottom-2 left-0"></div>
            </h2>
          </div>
          
          <div className="absolute -top-4 -left-4 w-8 h-8 border-l-2 border-t-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -top-4 -right-4 w-8 h-8 border-r-2 border-t-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -bottom-4 -left-4 w-8 h-8 border-l-2 border-b-2 border-indigo-300 opacity-70"></div>
          <div className="absolute -bottom-4 -right-4 w-8 h-8 border-r-2 border-b-2 border-indigo-300 opacity-70"></div>
          
          <div className="space-y-4 mb-8">
            <div className="flex justify-between font-serif italic text-indigo-700">
              <span>Subtotal</span>
              <span>${subtotal.toFixed(2)}</span>
            </div>
            <div className="flex justify-between font-serif italic text-indigo-700">
              <span>Delivery</span>
              <span>Complimentary</span>
            </div>
            <div className="flex justify-between font-serif italic text-indigo-700">
              <span>Gallery Commission</span>
              <span>${(subtotal * 0.12).toFixed(2)}</span>
            </div>
            <div className="border-t border-indigo-200 pt-4 mt-4">
              <div className="flex justify-between font-serif text-lg text-indigo-800 font-bold">
                <span>Total</span>
                <span>${(subtotal + 0 + (subtotal * 0.12)).toFixed(2)}</span>
              </div>
            </div>
          </div>
          
          {step === 'review' && (
            <button 
              onClick={() => setStep('shipping')}
              className="w-full py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all font-serif italic"
            >
              Proceed to Delivery
            </button>
          )}
          
          <div className="mt-8 text-sm text-indigo-600">
            <p className="mb-3 font-serif italic">We accept:</p>
            <div className="flex space-x-3">
              {/* <div className="w-12 h-8 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-md flex items-center justify-center shadow-sm border border-indigo-200">Visa</div>
              <div className="w-12 h-8 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-md flex items-center justify-center shadow-sm border border-indigo-200">Mastercard</div>
              <div className="w-12 h-8 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-md flex items-center justify-center shadow-sm border border-indigo-200">Paypal</div>
              <div className="w-12 h-8 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-md flex items-center justify-center shadow-sm border border-indigo-200"></div> */}
                                <div className="bg-gradient-to-r from-purple-50 to-indigo-50 px-3 py-2 rounded-md text-sm font-serif italic text-purple-700">Visa</div>
                                <div className="bg-gradient-to-r from-purple-50 to-indigo-50 px-3 py-2 rounded-md text-sm font-serif italic text-purple-700">Mastercard</div>
                                <div className="bg-gradient-to-r from-purple-50 to-indigo-50 px-3 py-2 rounded-md text-sm font-serif italic text-purple-700">PayPal</div>
                                <div className="bg-gradient-to-r from-purple-50 to-indigo-50 px-3 py-2 rounded-md text-sm font-serif italic text-purple-700">COD</div>

            </div>
          </div>
        </div>
      </div>
    </div>
  );
}